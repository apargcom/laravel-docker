version: '3.8'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./services/app/Dockerfile
      target: dev
    image: ${PUBLISHER}/${PREFIX}-app:latest
    restart: unless-stopped
    volumes:
      - ./src:/var/www
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "9000"
    deploy:
      mode: replicated
      replicas: ${APP_SCALE}  

  #Nginx Service
  server:
    build:
      context: ./services/server
      target: dev
    image: ${PUBLISHER}/${PREFIX}-server:latest
    container_name: ${PREFIX}-server
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www
    networks:
      - app-network

  #MySQL Service
  db:
    build:
      context: ./services/db
    image: ${PUBLISHER}/${PREFIX}-db:latest
    container_name: ${PREFIX}-db
    restart: unless-stopped
    ports:
      - "3306"
    networks:
      - app-network
    volumes: 
      - dbdata:/var/lib/mysql/
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$DB_USERNAME", "-p$DB_PASSWORD",  "ping"]
      retries: 10
      start_period: 10s
      interval: 1s
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: yes

  #Redis Service
  redis:
    build:
      context: ./services/redis
    image: ${PUBLISHER}/${PREFIX}-redis:latest
    container_name: ${PREFIX}-redis
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 10
      start_period: 10s
      interval: 1s
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - app-network
    ports:
      - "6379"

  #PhpMyAdmin Service (URL - localhost:8080)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: ${PREFIX}-phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '8080:80'
    depends_on:
      - db
    networks:
      - app-network

  # Redis Commander
  redis-commander:
    container_name: ${PREFIX}-redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD}
    ports:
    - "8081:8081"
    depends_on:
      - redis
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    name: ${PREFIX}-network
    driver: bridge
#Volumes
volumes:
  dbdata:
    name: ${PREFIX}-dbdata
    driver: local
  redisdata:
    name: ${PREFIX}-redisdata
    driver: local