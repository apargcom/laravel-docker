user  nginx;

events {
    worker_connections   1000;
}

http {

    server_tokens off;
    ssl_buffer_size 8k;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/privkey.pem;

    upstream app-upstream {
        least_conn;
        server app:9000 weight=1;
        keepalive 8;
    }

    # Redirect HTTP non-www to HTTPS non-www
    server {
        listen 80;
        listen [::]:80;
        return 301 https://$host$request_uri;
    }

    # Redirect www to HTTPS non-www
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "~^www\.(.*)$" ;
        return 301 https://$1$request_uri ;
    }

    server {
        server_name  _;        
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        index index.php index.html;
        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;
        root /var/www/public;
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass app-upstream;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
        location / {
			include /etc/nginx/mime.types; 
            try_files $uri $uri/ /index.php?$query_string;
            gzip_static on;
        }
    }

     #Enable browser cache
    expires 30d;
    add_header Pragma "public";
    add_header Cache-Control "public";

    #Enable output compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "MSIE [1-6]\.";
}